// Pixel art examples explored at https://css-tricks.com/fun-times-css-pixel-art/ -> author credit: Geoff Graham

.hacker-chip-container {
    // sets proper font size for accurate game piece rendering 
    // change piece size here if needed
    font-size: 0.1rem;
    width: 25em;
    height: 25em;
    background-color: $hacker-red;
    position: absolute;
    // animation: hacker-chip-bounce 1.6s ease-in-out infinite;
    margin: 2.75%; 
    box-shadow: -1.25rem 1.25rem 0 $hacker-empty-block,
        1.25rem 1.25rem 0 $hacker-empty-block,
        1.25rem -1.25rem 0 $hacker-empty-block,
        -1.25rem -1.25rem 0 $hacker-empty-block;
}

.hacker-chip {
    position: absolute;
    top: 0;
    // determins dimensions of pixels
    // percentage based, changes with container dimensions
    height: 12.5%;
    width: 12.5%;

    box-shadow: 
    // layers lay horizontal, run left to right, stack top to bottom
    // values must be "em" for proper piece resizing

    // arrow head
        4.5em 4.5em 0 $hacker-white,
        7.5em 7.5em 0 $hacker-white,
        10.5em 10.5em 0 $hacker-white,
        7.5em 13.5em 0 $hacker-white,
        4.5em 16.5em 0 $hacker-white,

    // bottom line mask
        10.5em 14em 0 $hacker-red,
        13.5em 14em 0 $hacker-red,
        16.5em 14em 0 $hacker-red,

    // bottom line
        10.5em 16.5em 0 $hacker-white,
        13.5em 16.5em 0 $hacker-white,
        16.5em 16.5em 0 $hacker-white;
}

// hacker-chip animation
@keyframes hacker-chip-bounce {
    0%{ transform: translateY(0rem);
        box-shadow: 0 0 1.5rem 1rem #eee}
    50%{ transform: translateY(-1rem);
        box-shadow: 0 0 2rem 1.5rem #eee}
    100%{ transform: translateY(0rem);
        box-shadow: 0 0 1.5rem 1rem #eee}
}